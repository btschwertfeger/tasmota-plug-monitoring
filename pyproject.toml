# -*- coding: utf-8 -*-
# Copyright (C) 2024 Benjamin Thomas Schwertfeger
# GitHub: https://github.com/btschwertfeger
#

# ========= T Y P I N G ========================================================
#
[tool.mypy]
python_version = "3.11"

# junit_xml = "mypy.xml"
files = ["krakengridbot/*.py"]
exclude = ["tests/*"]

cache_dir = ".cache/mypy"
sqlite_cache = true
cache_fine_grained = true

# Disallow dynamic typing
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_subclassing_any = false

# Untyped definitions and calls
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = false

# None and Optional handling
implicit_optional = true
strict_optional = false

# Configuring warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true

# Suppressing errors
ignore_errors = false

# Configuring error messages
show_error_context = true
show_column_numbers = true
hide_error_codes = false
pretty = true
color_output = true
show_absolute_path = true
ignore_missing_imports = true

# Miscellaneous strictness flags
allow_untyped_globals = false
allow_redefinition = false
local_partial_types = false
# disable_error_code = xxx,xxx
implicit_reexport = true
strict_concatenate = false
strict_equality = true
strict = true

# ========= L I N T I N G ======================================================
#
[tool.ruff]
cache-dir = ".cache/ruff"

respect-gitignore = true
exclude = []
line-length = 130

[tool.ruff.lint]
select = [
  "A",      # flake8-builtins
  "AIR",    # Airflow
  "ANN",    # flake8-annotations
  "ARG",    # flake8-unused-arguments
  "ASYNC",  # flake8-async
  "ASYNC1", # flake8-trio
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C",      # pylint convention
  "C4",     # flake8-comprehensions
  "COM",    # flake8-commas
  "CPY",    # flake8-copyright
  "E",      # pylint error
  "F",      # pyflakes
  "FA",     # flake8-future-annotations
  # "FBT",    # flake8-boolean-trap
  "FLY",  # flynt
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "INT",  # flake8-gettext
  "ISC",  # flake8-implicit-string-concat
  "LOG",  # flake8-logging
  "N",    # PEP8 naming
  "PERF", # Perflint
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",   # PyLint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "PYI",  # flake8-pyi
  "Q",    # flake8-quotes
  "R",    # pylint refactor
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # Ruff-specific rules
  "S",    # flake8-bandit
  "SIM",  # flake8-simplify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T20",  # flake8-print
  "TCH",  # flake8-type-checking
  "TID",  # flake8-tidy-imports
]
fixable = ["ALL"]


task-tags = ["todo", "TODO", "fixme", "FIXME"]

[tool.ruff.lint.flake8-copyright]
author = "Benjamin Thomas Schwertfeger"
notice-rgx = "(?i)Copyright \\(C\\) \\d{4}"
min-file-size = 1024

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.pep8-naming]
ignore-names = ["i", "j", "k", "_"]

[tool.ruff.lint.pylint]
max-args = 8
max-branches = 15
max-returns = 6
max-statements = 50
allow-magic-value-types = ["int"]
